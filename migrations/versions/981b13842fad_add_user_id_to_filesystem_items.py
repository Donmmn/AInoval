"""add_user_id_to_filesystem_items

Revision ID: 981b13842fad
Revises: 22e14211c1f5
Create Date: 2025-05-08 02:10:38.228398

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '981b13842fad'
down_revision = '22e14211c1f5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: (If user_id column already exists, this add_column line should be removed or commented out)
    # with op.batch_alter_table('filesystem_items', schema=None) as batch_op:
    #     batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True)) # Assuming it might exist and be nullable

    # Step 2: Update existing rows with a default user_id (e.g., 1)
    # This is crucial if the column exists but contains NULLs and you want it to be NOT NULL.
    # IMPORTANT: Replace 1 with an actual existing user ID in your users table.
    op.execute('UPDATE filesystem_items SET user_id = 1 WHERE user_id IS NULL')

    # Step 3: Alter the column to be NOT NULL and create the foreign key.
    # This context will handle applying NOT NULL if the column was previously nullable,
    # and will create the foreign key.
    with op.batch_alter_table('filesystem_items', schema=None) as batch_op:
        # Ensure the column is NOT NULL. If it's already NOT NULL, this might be benign
        # or could be skipped if you are certain of its current state.
        batch_op.alter_column('user_id', existing_type=sa.Integer(), nullable=False) 
                                # existing_type might be needed if type also changed
        
        # Create the foreign key constraint with a name
        # Ensure 'user' table exists and user_id=1 is valid in 'user' table.
        batch_op.create_foreign_key('fk_filesystem_items_user_id_user', 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('filesystem_items', schema=None) as batch_op:
        batch_op.drop_constraint('fk_filesystem_items_user_id_user', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
